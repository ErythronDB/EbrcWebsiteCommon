#!/usr/bin/perl

use strict;

my $baseGus = $ENV{BASE_GUS};
my $projectHome = $ENV{PROJECT_HOME};
my $gusHome = $ENV{GUS_HOME};

my ($projectName, $webapp) = $baseGus =~ /\/(\w+)\/([\w\.]+)\/?$/;

##deal with change Mark made so that Gates and ICEMR sites are run out of the ClinEpiDB tomcat
##requires developer to set a PROJECT_NAME environment variable appropriately ... best in the etc/setenv file that is sourced

$projectName = $ENV{PROJECT_NAME} ? $ENV{PROJECT_NAME} : $projectName;

unless($baseGus && $projectHome && $gusHome) {
  die "WHOOPS!  Did you forgot to source your setenv file?";
}

my $svnPrefix;
if ($projectName eq "MicrobiomeDB" || $projectName eq "ClinEpiDB") {
  $svnPrefix =$projectName;
  $svnPrefix =~s/DB//  ;
} elsif ($projectName eq "ICEMR" || $projectName eq "Gates") {
  $svnPrefix = "ClinEpi";
} else {
  $svnPrefix = "ApiCommon";
}


my $mode = $ARGV[0];

my @modes;
if ($svnPrefix eq "ApiCommon") {
  @modes = ("full", "model", "graph", "gbrowse", "ontology", "site", "shiny", "cgi");
} else {
  @modes = ("full", "model", "site", "ontology", "graph", "shiny", "cgi");
}

my $isValidMode;
foreach(@modes) {
  $isValidMode++ if($_ eq $mode);
}

unless($isValidMode) {
  die("Whoops... You specified an incorrect command line option: [$mode].  Viable options are " . join(",", @modes));
}


my $cmd;

my $dieOnError = "set -e";

my $injectTemplates = "echo Injecting Templates; presenterInjectTemplates -presentersDir $projectHome/$svnPrefix\Presenters/Model/lib/xml/datasetPresenters -templatesDir $projectHome/$svnPrefix\Model/Model/lib/dst -contactsXmlFile $projectHome/$svnPrefix\Presenters/Model/lib/xml/datasetPresenters/contacts/contacts.xml -globalPresentersFile $projectHome/$svnPrefix\Model/Model/lib/xml/datasetPresenters/global.xml";

my $reloadWebapp = "echo Reloading webapp $webapp; instance_manager manage $projectName reload $webapp";

my $stopWebapp = "instance_manager manage $projectName stop $webapp";

my $wdkXml = "wdkXml -model $projectName > /dev/null";

my $cleanGbrowseCache = "rm -rf $baseGus/html/gbrowse/tmp/*";

if($mode eq 'full') {
  $cmd = "$dieOnError; bldw $svnPrefix\Presenters $baseGus/etc/webapp.prop; $wdkXml; $reloadWebapp";
}

if($mode eq 'model') {
  $cmd = "$dieOnError; bld EbrcModelCommon/Model; bld $svnPrefix\Model/Model; $injectTemplates; $wdkXml; $reloadWebapp";
}

if($mode eq 'cgi') {
  $cmd = "$dieOnError;  bld EbrcWebsiteCommon/View; bld $svnPrefix\Website/View";
}

if($mode eq 'graph') {
  $cmd = "$dieOnError;  bld EbrcModelCommon/Model; bld $svnPrefix\Model/Model; bld EbrcWebsiteCommon/View; bld $svnPrefix\Website/View; bld EbrcWebsiteCommon/Model; bld $svnPrefix\Website/Model; $injectTemplates";
}

if($mode eq 'gbrowse') {
  $cmd = "$dieOnError;  bld EbrcModelCommon/Model; bld $svnPrefix\Model/Model; bldw $svnPrefix\Website/Site $baseGus/etc/webapp.prop; $cleanGbrowseCache; $injectTemplates";
}

if($mode eq 'ontology') {
  $cmd = "$dieOnError;  bld EbrcModelCommon/Model; bld $svnPrefix\Model/Model; bld $svnPrefix\Presenters/Model; $wdkXml; $reloadWebapp";
}

if($mode eq 'site') {
  $cmd = "$dieOnError; bldw EbrcWebsiteCommon/Site $baseGus/etc/webapp.prop; bldw $svnPrefix\Website/Site $baseGus/etc/webapp.prop";
}

if($mode eq 'shiny') {
  my @procList = `/usr/sbin/lsof -t -c R -a +D "$gusHome"`;
  if (scalar @procList > 0) {
    $cmd = "bld EbrcWebsiteCommon/View; bld $svnPrefix\Website/View; kill \$(/usr/sbin/lsof -t -c R -a +D \"$gusHome\");";
  } else {
    $cmd = "bld EbrcWebsiteCommon/View; bld $svnPrefix\Website/View;";
  }
}

print STDERR "Running Command:  $cmd\n";


unless(system($cmd) == 0) {
  system($stopWebapp);
  die "ERROR [$?] running Command: $cmd";;
}

print STDERR "FINISHED Command:  $cmd\n";

1;
